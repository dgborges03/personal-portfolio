---
/** Props: { item: { id, title, emoji?, blurb, image?, tags?, link?: string|null, fit?: "contain"|"cover" } } */
const { item } = Astro.props;
const isClickable = !!item.link;
---
<article class="group relative w-full overflow-hidden rounded-2xl border bg-gradient-to-br from-zinc-50 to-white shadow-sm">
  <!-- Two columns at sm+: text (5fr) | image (3fr). No col-span on text. -->
  <div class="grid grid-cols-1 sm:grid-cols-[5fr_3fr] items-stretch">
    <!-- Text -->
    <div class="p-5 sm:p-6 flex flex-col gap-2 cursor-default">
      <div class="flex items-center gap-3">
        {item.emoji && <span class="text-2xl">{item.emoji}</span>}
        <h3 class="text-lg font-semibold tracking-tight">{item.title}</h3>
      </div>

      <p class="text-sm text-zinc-600 leading-relaxed">{item.blurb}</p>

      {item.tags?.length > 0 && (
        <ul class="mt-2 flex flex-wrap gap-2">
          {item.tags.map((t) => (
            <li class="rounded-full border px-2 py-0.5 text-xs text-zinc-600 bg-white/60">{t}</li>
          ))}
        </ul>
      )}

      {isClickable && (
        <span class="mt-3 inline-flex items-center gap-2 text-sm text-zinc-700 group-hover:underline underline-offset-4">
          View project
          <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M7 17L17 7M7 7h10v10"/>
          </svg>
        </span>
      )}
    </div>

    <!-- Image / placeholder -->
    <div class="relative hidden sm:block min-h-[220px]">
      {item.image ? (
        <img
          src={item.image}
          alt={item.title}
          class={`absolute inset-0 h-full w-full ${
            item.fit === "contain"
              ? "object-contain p-4 bg-white"
              : "object-cover"
          }`}
          loading="lazy"
          decoding="async"
        />
      ) : (
        <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_top,rgba(244,244,245,.9),transparent_60%)]" />
      )}
    </div>
  </div>

  {isClickable && (
    <a href={item.link} class="absolute inset-0" aria-label={`Open ${item.title}`}></a>
  )}
</article>
